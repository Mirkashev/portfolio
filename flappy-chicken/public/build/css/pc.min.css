@font-face {
  font-family: "Cera Condensed Pro";
  src: url("../files/fonts/CeraCondensedPro-Regular.eot");
  src: local("Cera Condensed Pro Regular"), local("CeraCondensedPro-Regular"), url("../files/fonts/CeraCondensedPro-Regular.eot?#iefix") format("embedded-opentype"), url("../files/fonts/CeraCondensedPro-Regular.woff2") format("woff2"), url("../files/fonts/CeraCondensedPro-Regular.woff") format("woff"), url("../files/fonts/CeraCondensedPro-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Cera Condensed Pro Bold";
  src: url("../files/fonts/CeraCondensedPro-Black.eot");
  src: local("Cera Condensed Pro Black"), local("CeraCondensedPro-Black"), url("../files/fonts/CeraCondensedPro-Black.eot?#iefix") format("embedded-opentype"), url("../files/fonts/CeraCondensedPro-Black.woff2") format("woff2"), url("../files/fonts/CeraCondensedPro-Black.woff") format("woff"), url("../files/fonts/CeraCondensedPro-Black.ttf") format("truetype");
  font-weight: 900;
  font-style: normal;
}
@font-face {
  font-family: "Cera Condensed Pro Medium";
  src: local("Cera Condensed Pro Medium"), local("Cera-Condensed-Pro-Medium"), url("../files/fonts/CeraCondensedPro-Medium.woff2") format("woff2"), url("../files/fonts/CeraCondensedPro-Medium.woff") format("woff"), url("../files/fonts/CeraCondensedPro-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
}
.hidden {
  display: none;
}

body {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  font-family: "Cera Condensed Pro";
}

.mobile {
  justify-content: center;
}

.cont {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column-reverse;
}
.cont .keyboard-control {
  background-image: url(../files/assets/controlType.png);
  width: 359px;
  height: 361px;
  color: red;
  position: absolute;
  background-size: cover;
  bottom: 100px;
  left: 6px;
}
.cont .keyboard-control .checkbox-wrapper {
  position: absolute;
  right: 16%;
  bottom: 2.5%;
  height: 15px;
  width: 15px;
  background-color: #c5002d;
  border: 3px solid black;
  border-radius: 40px;
}
.cont .keyboard-control .checkbox-wrapper input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}
.cont .keyboard-control .checkbox-wrapper:hover input ~ .checkmark {
  background-color: #2196f3;
}
.cont .keyboard-control .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}
.cont .keyboard-control .checkbox-wrapper input:checked ~ .checkmark:after {
  display: block;
}
.cont .keyboard-control .checkbox-wrapper .checkmark:after {
  left: 2.3px;
  top: 1.6px;
  width: 11px;
  height: 11px;
  border-radius: 40px;
  background: #ffffff;
}

.ext-state-minimized {
  overflow: hidden;
  display: none;
  background: #ffffff;
  border: 3px solid #c5002d;
  transform: translate(-92px) rotate(-90deg);
  justify-content: center;
  width: 234.65px;
  height: 33.65px;
  border-radius: 40px;
  font-family: "Cera Condensed Pro Bold";
  cursor: pointer;
}
.ext-state-minimized span {
  font-size: 24px;
  font-weight: 900;
}

div#canvas > div {
  z-index: 1 !important;
  pointer-events: inherit !important;
}

canvas {
  display: none;
  width: inherit;
  height: inherit;
  z-index: 9999999999;
  font-size: 15px;
  clip-path: polygon(100% 0, 94.8% 100%, 5.1% 100%, 0 0);
}

.pc-tops {
  clip-path: polygon(100% 0, 96.7% 100%, 3.4% 100%, 0 0);
}

.mobile-tops {
  clip-path: polygon(100% 0, 96.8% 100%, 3.1% 100%, 0 0);
}

.shown {
  display: flex !important;
}

.parent {
  font-family: "Cera Condensed Pro";
}

/*
* jQueryTab v2.0
* Copyright Dharma Poudel (@rogercomred)
* Free to use under the GPLv3 license.
* http://www.gnu.org/licenses/gpl-3.0.html
*/
/* == quick_reset */
* {
  border: none;
  margin: 0;
  padding: 0;
  outline: none;
}

/*  == common styles */
.config {
  background: #f6f6f6;
  min-height: 100%;
  font: normal 13px/1.5 Arial, Helvetica, sans-serif;
  margin-bottom: 30px;
}

ul,
ol {
  list-style: none outside none;
}

h1 {
  font-size: 25px;
  color: #000;
  padding-bottom: 20px;
  margin-bottom: 20px;
}

h3 {
  margin: 30px 0 10px;
}

p {
  margin: 0 0 20px;
}

pre {
  border: 1px solid #ddd;
  box-shadow: 1px 1px 0 #fff, 2px 2px 0 #ddd;
  margin: 10px 0;
  padding: 10px;
  background: #fcfcfc;
}

#container {
  width: 80%;
  padding: 0px 50px;
  margin: 0 auto;
}

a {
  cursor: pointer;
}

a:link,
a:visited {
  color: #000;
  text-decoration: none;
}

a:hover {
  color: #666;
}

/*  == tab heading */
.tabs {
  border: 1px solid #ccc;
  overflow: hidden;
}

.tabs li {
  float: left;
}

.tabs li a {
  border-left: 1px solid #ccc;
  color: #21759b;
  display: block;
  font-weight: bold;
  padding: 15px 20px;
}

.tabs li:first-child a {
  border-left: none;
}

.tabs li a:hover,
.tabs li a:focus {
  color: #d54e21;
}

.tabs .active a {
  color: #000;
}

/* == accordion */
.accordion_tabs {
  display: none;
  border-top: 1px solid #ccc;
  padding: 10px;
  font-weight: bold;
  background: #eee;
}

.tab_content_wrapper > .accordion_tabs:first-child {
  border-top: none;
}

a.accordion_tabs:link,
a.accordion_tabs:visited {
  color: #21759b;
}

a.accordion_tabs:hover,
a.accordion_tabs:focus {
  color: #d54e21;
}

a.accordion_tabs.active {
  color: #000;
  border-bottom: 1px solid #ccc;
}

/*  == tab content  */
.tab_content_wrapper {
  overflow: hidden;
  position: relative;
  transition: all 0.3s ease-in-out 0.3s;
}

.tab_content {
  transition: all 0.6s ease-in-out;
  padding: 15px;
  background: #f6f6f6;
}

.toggle_display {
  display: block;
}

.toggle_position {
  position: absolute;
}

.toggle_border {
  border: 1px solid #ccc;
  border-width: 0 1px 1px 1px;
}

.invert_border {
  border-width: 1px 1px 0 1px;
}

/* Media Queries
***********************/
@media screen and (max-width: 600px) {
  #container {
    width: 90%;
    padding: 40px 20px;
  }
  .accordion_tabs {
    display: block;
  }
  .tab_content_wrapper {
    height: auto !important;
  }
  .tab_content {
    transition: none;
    padding: 10px;
  }
  .toggle_display {
    display: none;
  }
  .toggle_position {
    position: relative;
  }
  .toggle_border {
    border-width: 1px;
  }
}